{"ast":null,"code":"var _jsxFileName = \"/Users/miikka/Code/note-app/notes-app-ui/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const handleAddNote = event => {\n    event.preventDefault();\n    setNotes([newNote, ...notes]);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  const handleNoteClick = note => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleUpdateNote = event => {\n    event.preventDefault();\n    if (!selectedNote) {\n      return;\n    }\n    const updatedNote = {\n      id: selectedNote.id,\n      title: title,\n      content: content\n    };\n    const updatedNotes = notes.map(note => note.id === selectedNote.id ? updatedNote : note);\n    setNotes(updatedNotes);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  const newNote = {\n    id: notes.length + 1,\n    title: title,\n    content: content\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: handleAddNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        rows: 10,\n        onChange: e => {\n          setContent(e.target.value);\n        },\n        placeholder: \"Content\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        onClick: () => {\n          handleNoteClick(note);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, note.title + note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"k8RNc2sF9qAwrnv1tBLk1W7WERk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","title","setTitle","content","setContent","notes","setNotes","selectedNote","setSelectedNote","handleAddNote","event","preventDefault","newNote","handleNoteClick","note","handleUpdateNote","updatedNote","id","updatedNotes","map","length","className","children","onSubmit","placeholder","value","onChange","e","target","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","onClick","_c","$RefreshReg$"],"sources":["/Users/miikka/Code/note-app/notes-app-ui/src/App.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport \"./App.css\";\n\ninterface Note {\n  id: number;\n  title: string;\n  content: string;\n}\n\nfunction App() {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [notes, setNotes] = useState<Note[]>([]);\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null);\n\n  const handleAddNote = (event: React.FormEvent) => {\n    event.preventDefault();\n    setNotes([newNote, ...notes]);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n\n  const handleNoteClick = (note: Note) => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n\n  const handleUpdateNote = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!selectedNote) {\n      return;\n    }\n\n    const updatedNote: Note = {\n      id: selectedNote.id,\n      title: title,\n      content: content,\n    };\n\n    const updatedNotes = notes.map((note) =>\n      note.id === selectedNote.id ? updatedNote : note\n    );\n\n    setNotes(updatedNotes);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n\n  const newNote: Note = {\n    id: notes.length + 1,\n    title: title,\n    content: content,\n  };\n\n  return (\n    <div className=\"app-container\">\n      <form className=\"note-form\" onSubmit={handleAddNote}>\n        <input\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n          required\n        />\n        <textarea\n          value={content}\n          rows={10}\n          onChange={(e) => {\n            setContent(e.target.value);\n          }}\n          placeholder=\"Content\"\n          required\n        ></textarea>\n        <button type=\"submit\">Add Note</button>\n      </form>\n      <div className=\"notes-grid\">\n        {notes.map((note) => (\n          <div\n            key={note.title + note.id}\n            className=\"note-item\"\n            onClick={() => {\n              handleNoteClick(note);\n            }}\n          >\n            <div className=\"notes-header\">\n              <button>x</button>\n            </div>\n            <h2>{note.title}</h2>\n            <p>{note.content}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}