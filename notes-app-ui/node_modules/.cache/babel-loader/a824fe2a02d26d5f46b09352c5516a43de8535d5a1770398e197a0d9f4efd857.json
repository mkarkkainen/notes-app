{"ast":null,"code":"var _jsxFileName = \"/Users/miikka/Code/note-app/notes-app-ui/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const containerRef = useRef(null);\n  const handleAddNote = event => {\n    event.preventDefault();\n    setNotes([newNote, ...notes]);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  const handleNoteClick = note => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleCancel = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  const handleUpdateNote = event => {\n    event.preventDefault();\n    if (!selectedNote) {\n      return;\n    }\n    const updatedNote = {\n      id: selectedNote.id,\n      title: title,\n      content: content\n    };\n    const updatedNotes = notes.map(note => note.id === selectedNote.id ? updatedNote : note);\n    setNotes(updatedNotes);\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  const newNote = {\n    id: notes.length + 1,\n    title: title,\n    content: content\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: event => {\n        selectedNote ? handleUpdateNote(event) : handleAddNote(event);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        rows: 10,\n        onChange: e => {\n          setContent(e.target.value);\n        },\n        placeholder: \"Content\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), selectedNote ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        onClick: () => {\n          handleNoteClick(note);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, note.title + note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LIXibQ/kIUAwlAuR0Of7THjw3qQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","title","setTitle","content","setContent","notes","setNotes","selectedNote","setSelectedNote","containerRef","handleAddNote","event","preventDefault","newNote","handleNoteClick","note","handleCancel","handleUpdateNote","updatedNote","id","updatedNotes","map","length","className","ref","children","onSubmit","placeholder","value","onChange","e","target","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","onClick","_c","$RefreshReg$"],"sources":["/Users/miikka/Code/note-app/notes-app-ui/src/App.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\n\nimport \"./App.css\";\n\ninterface Note {\n  id: number;\n  title: string;\n  content: string;\n}\n\nfunction App() {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [notes, setNotes] = useState<Note[]>([]);\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null);\n\n  const containerRef = useRef(null);\n\n  const handleAddNote = (event: React.FormEvent) => {\n    event.preventDefault();\n    setNotes([newNote, ...notes]);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n\n  const handleNoteClick = (note: Note) => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n\n  const handleCancel = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n\n  const handleUpdateNote = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!selectedNote) {\n      return;\n    }\n\n    const updatedNote: Note = {\n      id: selectedNote.id,\n      title: title,\n      content: content,\n    };\n\n    const updatedNotes = notes.map((note) =>\n      note.id === selectedNote.id ? updatedNote : note\n    );\n\n    setNotes(updatedNotes);\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n\n  const newNote: Note = {\n    id: notes.length + 1,\n    title: title,\n    content: content,\n  };\n\n  return (\n    <div className=\"app-container\" ref={containerRef}>\n      <form\n        className=\"note-form\"\n        onSubmit={(event) => {\n          selectedNote ? handleUpdateNote(event) : handleAddNote(event);\n        }}\n      >\n        <input\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n          required\n        />\n        <textarea\n          value={content}\n          rows={10}\n          onChange={(e) => {\n            setContent(e.target.value);\n          }}\n          placeholder=\"Content\"\n          required\n        ></textarea>\n        {selectedNote ? (\n          <>\n            <button type=\"submit\">Save</button>\n            <button onClick={handleCancel}>Cancel</button>\n          </>\n        ) : (\n          <button type=\"submit\">Add Note</button>\n        )}\n      </form>\n      <div className=\"notes-grid\">\n        {notes.map((note) => (\n          <div\n            key={note.title + note.id}\n            className=\"note-item\"\n            onClick={() => {\n              handleNoteClick(note);\n            }}\n          >\n            <div className=\"notes-header\">\n              <button>x</button>\n            </div>\n            <h2>{note.title}</h2>\n            <p>{note.content}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}